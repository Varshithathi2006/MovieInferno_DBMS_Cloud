"use strict";(()=>{var e={};e.id=247,e.ids=[247],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9208:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>m,patchFetch:()=>l,requestAsyncStorage:()=>c,routeModule:()=>u,serverHooks:()=>h,staticGenerationAsyncStorage:()=>d});var o={};t.r(o),t.d(o,{GET:()=>p});var s=t(9303),a=t(8716),i=t(670),n=t(7070);async function p(e){try{let{searchParams:r}=new URL(e.url),t=r.get("query"),o=r.get("page")||"1";if(!t)return n.NextResponse.json({error:"Query parameter is required"},{status:400});let s="df540dc7eced57f912edf1ef5c88ebda";if(!s)return n.NextResponse.json({error:"API key not configured"},{status:500});let a=await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${s}&query=${encodeURIComponent(t)}&page=${o}`);if(!a.ok)throw Error(`TMDB API error: ${a.status}`);let i=await a.json();return n.NextResponse.json(i)}catch(e){return console.error("Error searching movies:",e),n.NextResponse.json({error:"Failed to search movies"},{status:500})}}let u=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/search/movie/route",pathname:"/api/search/movie",filename:"route",bundlePath:"app/api/search/movie/route"},resolvedPagePath:"C:\\Users\\varshitha-home\\Desktop\\last_hope\\MovieInferno\\app\\api\\search\\movie\\route.js",nextConfigOutput:"",userland:o}),{requestAsyncStorage:c,staticGenerationAsyncStorage:d,serverHooks:h}=u,m="/api/search/movie/route";function l(){return(0,i.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:d})}},9303:(e,r,t)=>{e.exports=t(517)}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[948,70],()=>t(9208));module.exports=o})();